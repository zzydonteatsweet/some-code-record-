//题目的意思是：给出一个数如果一个数可以被表示为，一个整数再加上一个分数的形式那么就称这个表达形式就是这个分数的一个带分数，并且这个带分数只能是1-9的9位数分别表示，问给出一个数求这个数有多少个带
//分数
#include<iostream>
#include<vector>
#include<cmath>
#include<cstdlib>
using namespace std;
int n,wei;
vector<int> in;
vector<int> chushu;
const int MAXN=1000005;
int used[MAXN];
int Count=0;
int now_sum=0;
int getwei(int u){
    int Count=0;
    while(u>0){
        Count++;
        u/=10;
    }
    return Count;
}
/*int getvalue(vector<int> t ){
    int sum=0;
    for(int i=0;i<t.size();i++){
        sum+=t[i]*pow(10,in.size()-1);
    }
    return sum;
}*/
int getdiv(int tn,int cur){
    if(cur >4||tn==0) return 0;
    if(cur){
        vector<int> p;
        //int chu=getvalue(chushu);
        int chu=0;
        for(int i=0;i<chushu.size();i++){
            chu+=chushu[i]*pow(10,chushu.size()-1-i);
        }
        
        int beichushu=chu*tn;
        if(beichushu<0) return 0;
        int temp=beichushu;
        bool ok=1;
        //判断被除数是不是有冲突或者是不是全覆盖
        //冲突
        while(beichushu>0){
            if(used[beichushu%10]) {
                ok=0;
                break;
            }
            int k=beichushu%10;
            if(!k) {ok=0; break;}
            p.push_back(k);
            used[beichushu%10]=1;
            beichushu/=10;
        }
        //全覆盖
        for(int j=1;j<=9;j++){
            if(!used[j]) {
                ok=false;
                break;
            } 
        }
        //used数组还原
        while(p.size()){
            used[p.back()]=0;
            p.pop_back();
        }
        if(ok){
            Count++;
            printf("第%d次数据是%d+%d/%d\n",Count,now_sum,temp,chu);
            system("pause");
            return 0;
        }
    }
    
    for(int j=1;j<=9;j++){
        if(!used[j]){
            chushu.push_back(j);
            used[j]=1;
            getdiv(tn,cur+1);
            used[j]=0;
            chushu.pop_back();
        }
    }

}
void dfs(int cur){
    if(cur==wei) return ;
    for(int i=1;i<=9;i++){
        if(!used[i]){
            used[i]=1;
            in.push_back(i);
            now_sum=0;       
           // now_sum=getvalue(in);
            for(int j=0;j<in.size();j++){
                now_sum+=in[j]*pow(10,in.size()-1-j);
            }   
            //开始进行分数部分的判断
            if(n-now_sum>=0) {
                getdiv(n-now_sum,0);

                 //下一步
                dfs(cur+1);
            }
            //还原
            used[i]=0;
            in.pop_back();
        }   
    }
}
int main(){
    cin >> n;
    wei=getwei(n);
    dfs(0);
    cout <<"总共的次数是 " <<Count << "\n";
   //printf("%d\n",Count);
}
